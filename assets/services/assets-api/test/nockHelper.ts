import nock from 'nock';

export const nockMode = process.env.RECORD ? 'record' : 'lockdown';

// this is a dummy token. It provides no real access
export const defaultAuthToken =
  'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wSXdNRE13TVRReVJrSkRSVFJDUXpNd00wSTRNemt3UVRsQlF6TTNRMFJET1RnME56ZEJPUSJ9.eyJodHRwczovL2FwaS5jb2RlZmkubmV0d29yayI6eyJlbnRpdHlJZCI6ImZkNWEwMzVhLWRmM2ItNDQ3ZC1hNTE0LThjNWJkNGJmZGU1OSIsInBlcm1pc3Npb25zIjpbInJlYWQ6ZGF0YSJdLCJ0ZW5hbnRJZCI6IjNmM2xaTDlhWmxVT0NQd0lLRUVCcWFCaGhDemlaY0I3In0sImh0dHBzOi8vYXBpLm9yY2hlc3RyYXRlLm5ldHdvcmsiOnsicGVybWlzc2lvbnMiOlsicmVhZDpldGhlcmV1bSIsInNpZ246ZXRoZXJldW0iLCJlbmNyeXB0OmV0aGVyZXVtIl0sInRlbmFudF9pZCI6IjNmM2xaTDlhWmxVT0NQd0lLRUVCcWFCaGhDemlaY0I3OmZkNWEwMzVhLWRmM2ItNDQ3ZC1hNTE0LThjNWJkNGJmZGU1OSJ9LCJpc3MiOiJodHRwczovL2NvZGVmaS5ldS5hdXRoMC5jb20vIiwic3ViIjoiYXV0aDB8NWY1NzhhM2I3MjQ0ZWEwMDZkNzI2NWQ3IiwiYXVkIjpbImh0dHBzOi8vYXBpLmNvZGVmaS5uZXR3b3JrIiwiaHR0cHM6Ly9jb2RlZmkuZXUuYXV0aDAuY29tL3VzZXJpbmZvIl0sImlhdCI6MTY0OTY5ODMxOCwiZXhwIjo0ODA1MzczOTg5LCJhenAiOiJNSjZac0tzVTF4b2dkQmZiMEluUzdkQ0pTeVVLTHh3YyIsInNjb3BlIjoib3BlbmlkIHByb2ZpbGUgZW1haWwiLCJndHkiOiJwYXNzd29yZCIsInBlcm1pc3Npb25zIjpbImNyZWF0ZV9hbGw6dGVuYW50OmFkbWluIiwiY3JlYXRlOnN0YWNrOmFkbWluIiwiY3JlYXRlOnRlbmFudCIsImRlbGV0ZV9hbGw6dGVuYW50IiwiZGVsZXRlOmRhdGEiLCJkZWxldGU6c2NoZW1hIiwiZGVsZXRlOnRlbmFudCIsImRlbGV0ZTp1c2VyIiwiZW5jcnlwdDpldGhlcmV1bSIsInJlYWRfYWxsOnRlbmFudCIsInJlYWQ6ZGF0YSIsInJlYWQ6ZXRoZXJldW0iLCJyZWFkOnNjaGVtYSIsInJlYWQ6dGVuYW50IiwicmVhZDp1c2VyIiwic2lnbjpldGhlcmV1bSIsInVwZGF0ZV9hbGw6dGVuYW50IiwidXBkYXRlOmRhdGEiLCJ1cGRhdGU6dGVuYW50IiwidXBkYXRlOnVzZXIiLCJ3cml0ZTpkYXRhIiwid3JpdGU6ZXRoZXJldW0iLCJ3cml0ZTpzY2hlbWEiXX0.QenKARNzWXRXVc_XwgEHKY4cDayIt0EGYJoUFiXVM_o9iYFx21PFadJQfxvOXQFIDtgdmOP73Fo_roakARr1wO_PKf9h8V1N8Qkjj6FMF588yzaPiOH1pKSWp2xUm_EO7ck9Ic67VmnDBkYHRkLd4NyOGagtGGbGoXKsd5NWXa1YRX80_O8TjXkJA8IiYyMjDckaTpSXaPgjwlHxC9rOX_9jvMNUzk2YUu3Oxm32Mp_8OruYZTTblRayn0wBCAFO-cWYv95l4-vAj4QUJ1Fa68Mfe9f_krYGzLXOgOwYEulbEei4nSHUP8jc1i4HQy6QzEyN71BGmL-FNStgbfsIiQ';

const realToken = process.env.REAL_TOKEN;

// this is a dummy token. It provides no real access
const defaultAccessToken =
  'eyJ0eXAiOiJKV1QiLCJhbGciOiJSUzI1NiIsImtpZCI6Ik4wSXdNRE13TVRReVJrSkRSVFJDUXpNd00wSTRNemt3UVRsQlF6TTNRMFJET1RnME56ZEJPUSJ9.eyJodHRwczovL2FwaS5vcmNoZXN0cmF0ZS5uZXR3b3JrIjp7InBlcm1pc3Npb25zIjpbInJlYWQ6ZXRoZXJldW0iLCJ3cml0ZTpldGhlcmV1bSIsImRlbGV0ZTpldGhlcmV1bSIsImRlc3Ryb3k6ZXRoZXJldW0iLCJzaWduOmV0aGVyZXVtIiwiZW5jcnlwdDpldGhlcmV1bSIsInJlYWQ6a2V5cyIsIndyaXRlOmtleXMiLCJkZWxldGU6a2V5cyIsImRlc3Ryb3k6a2V5cyIsInNpZ246a2V5cyIsImVuY3J5cHQ6a2V5cyIsInByb3h5Om5vZGVzIiwicmVhZDpzZWNyZXRzIiwid3JpdGU6c2VjcmV0cyIsImRlbGV0ZTpzZWNyZXRzIiwiZGVzdHJveTpzZWNyZXRzIiwicmVhZDphbGlhc2VzIiwid3JpdGU6YWxpYXNlcyIsImRlbGV0ZTphbGlhc2VzIl0sInRlbmFudF9pZCI6IioifSwiaHR0cHM6Ly9hcGkuY29kZWZpLm5ldHdvcmsiOnsiZW50aXR5SWQiOiIqIiwicGVybWlzc2lvbnMiOlsid3JpdGU6b3BlcmF0aW9uc19yZXNvbHZlIiwid3JpdGU6b3BlcmF0aW9uc19yZXF1ZXN0IiwicmVhZDp1c2VyIiwicmVhZDpkYXRhIiwid3JpdGU6ZGF0YSIsInVwZGF0ZTpkYXRhIiwiZGVsZXRlOmRhdGEiLCJ3cml0ZTpzY2hlbWEiLCJkZWxldGU6c2NoZW1hIiwicmVhZDpzY2hlbWEiLCJyZWFkOmF0dGVzdGF0aW9uIiwid3JpdGU6YXR0ZXN0YXRpb24iLCJyZWFkOm9yYWNsZSIsIndyaXRlOm9yYWNsZSIsInVwZGF0ZTpvcmFjbGUiLCJkZWxldGU6b3JhY2xlIiwid3JpdGU6Y2hhbm5lbCIsInJlYWQ6Y2hhbm5lbCIsInJlYWQ6dGVuYW50Iiwid3JpdGU6dGVuYW50IiwiZGVsZXRlOnRlbmFudCIsIndyaXRlOmF6dGVjYWNjb3VudCIsIndyaXRlOmNvbmZpZGVudGlhbHRva2VuIiwicmVhZDpjb25maWRlbnRpYWx0b2tlbiIsIm1pbnQ6Y29uZmlkZW50aWFsdG9rZW4iLCJob2xkOmNvbmZpZGVudGlhbHRva2VuIiwiZXhlY3V0ZWhvbGQ6Y29uZmlkZW50aWFsdG9rZW4iLCJ3cml0ZTphY2NvdW50IiwiZGVwbG95OnRva2VuIiwicmVhZDp0b2tlbiIsIm1pbnQ6dG9rZW4iLCJidXJuOnRva2VuIiwiaG9sZDp0b2tlbiIsImV4ZWN1dGVob2xkOnRva2VuIiwidHJhbnNmZXI6dG9rZW4iLCJzZXRfdXJpOnRva2VuIiwicmVhZDp0b2tlbi1vcGVyYXRpb24iLCJjcmVhdGU6dGVuYW50IiwicmVhZF9hbGw6dGVuYW50IiwidXBkYXRlOnRlbmFudCIsInVwZGF0ZV9hbGw6dGVuYW50IiwiZGVsZXRlX2FsbDp0ZW5hbnQiLCJjcmVhdGU6ZW50aXR5IiwicmVhZDplbnRpdHkiLCJyZWFkX2FsbDplbnRpdHkiLCJ1cGRhdGVfYWxsOmVudGl0eSIsInVwZGF0ZTplbnRpdHkiLCJkZWxldGVfYWxsOmVudGl0eSIsImRlbGV0ZTplbnRpdHkiLCJjcmVhdGU6c3RhY2s6YWRtaW4iLCJjcmVhdGVfYWxsOnRlbmFudDphZG1pbiIsImNyZWF0ZTp0ZW5hbnQ6YWRtaW4iLCJjcmVhdGVfYWxsOmVudGl0eTphZG1pbiIsImNyZWF0ZTplbnRpdHk6YWRtaW4iLCJjcmVhdGU6ZW50aXR5Om1lbWJlciIsInJlYWRfYWxsOmVudGl0eTptZW1iZXIiLCJ1cGRhdGVfYWxsOmVudGl0eTptZW1iZXIiLCJ1cGRhdGU6dXNlciIsImRlbGV0ZV9hbGw6ZW50aXR5Om1lbWJlciIsImRlbGV0ZTp1c2VyIiwiZXhlYzp0b2tlbiJdLCJ0ZW5hbnRJZCI6IioifSwiaXNzIjoiaHR0cHM6Ly9jb2RlZmkuZXUuYXV0aDAuY29tLyIsInN1YiI6IndjVVF6VEVVUlU3U2NjSzduYWw3VDFEdUp0Qlo3WEVVQGNsaWVudHMiLCJhdWQiOiJodHRwczovL2FwaS5jb2RlZmkubmV0d29yayIsImlhdCI6MTY0OTY5OTEzNSwiZXhwIjo0ODA1MzczOTg5LCJhenAiOiJ3Y1VRelRFVVJVN1NjY0s3bmFsN1QxRHVKdEJaN1hFVSIsInNjb3BlIjoid3JpdGU6b3BlcmF0aW9uc19yZXNvbHZlIHdyaXRlOm9wZXJhdGlvbnNfcmVxdWVzdCByZWFkOnVzZXIgcmVhZDpkYXRhIHdyaXRlOmRhdGEgdXBkYXRlOmRhdGEgZGVsZXRlOmRhdGEgd3JpdGU6c2NoZW1hIGRlbGV0ZTpzY2hlbWEgcmVhZDpzY2hlbWEgcmVhZDphdHRlc3RhdGlvbiB3cml0ZTphdHRlc3RhdGlvbiByZWFkOm9yYWNsZSB3cml0ZTpvcmFjbGUgdXBkYXRlOm9yYWNsZSBkZWxldGU6b3JhY2xlIHdyaXRlOmNoYW5uZWwgcmVhZDpjaGFubmVsIHJlYWQ6dGVuYW50IHdyaXRlOnRlbmFudCBkZWxldGU6dGVuYW50IHdyaXRlOmF6dGVjYWNjb3VudCB3cml0ZTpjb25maWRlbnRpYWx0b2tlbiByZWFkOmNvbmZpZGVudGlhbHRva2VuIG1pbnQ6Y29uZmlkZW50aWFsdG9rZW4gaG9sZDpjb25maWRlbnRpYWx0b2tlbiBleGVjdXRlaG9sZDpjb25maWRlbnRpYWx0b2tlbiB3cml0ZTphY2NvdW50IGRlcGxveTp0b2tlbiByZWFkOnRva2VuIG1pbnQ6dG9rZW4gYnVybjp0b2tlbiBob2xkOnRva2VuIGV4ZWN1dGVob2xkOnRva2VuIHRyYW5zZmVyOnRva2VuIHNldF91cmk6dG9rZW4gcmVhZDp0b2tlbi1vcGVyYXRpb24gY3JlYXRlOnRlbmFudCByZWFkX2FsbDp0ZW5hbnQgdXBkYXRlOnRlbmFudCB1cGRhdGVfYWxsOnRlbmFudCBkZWxldGVfYWxsOnRlbmFudCBjcmVhdGU6ZW50aXR5IHJlYWQ6ZW50aXR5IHJlYWRfYWxsOmVudGl0eSB1cGRhdGVfYWxsOmVudGl0eSB1cGRhdGU6ZW50aXR5IGRlbGV0ZV9hbGw6ZW50aXR5IGRlbGV0ZTplbnRpdHkgY3JlYXRlOnN0YWNrOmFkbWluIGNyZWF0ZV9hbGw6dGVuYW50OmFkbWluIGNyZWF0ZTp0ZW5hbnQ6YWRtaW4gY3JlYXRlX2FsbDplbnRpdHk6YWRtaW4gY3JlYXRlOmVudGl0eTphZG1pbiBjcmVhdGU6ZW50aXR5Om1lbWJlciByZWFkX2FsbDplbnRpdHk6bWVtYmVyIHVwZGF0ZV9hbGw6ZW50aXR5Om1lbWJlciB1cGRhdGU6dXNlciBkZWxldGVfYWxsOmVudGl0eTptZW1iZXIgZGVsZXRlOnVzZXIgZXhlYzp0b2tlbiByZWFkOmV0aGVyZXVtIHdyaXRlOmV0aGVyZXVtIGRlbGV0ZTpldGhlcmV1bSBkZXN0cm95OmV0aGVyZXVtIHNpZ246ZXRoZXJldW0gZW5jcnlwdDpldGhlcmV1bSByZWFkOmtleXMgd3JpdGU6a2V5cyBkZWxldGU6a2V5cyBkZXN0cm95OmtleXMgc2lnbjprZXlzIGVuY3J5cHQ6a2V5cyBwcm94eTpub2RlcyByZWFkOnNlY3JldHMgd3JpdGU6c2VjcmV0cyBkZWxldGU6c2VjcmV0cyBkZXN0cm95OnNlY3JldHMgcmVhZDphbGlhc2VzIHdyaXRlOmFsaWFzZXMgZGVsZXRlOmFsaWFzZXMiLCJndHkiOiJjbGllbnQtY3JlZGVudGlhbHMiLCJwZXJtaXNzaW9ucyI6WyJ3cml0ZTpvcGVyYXRpb25zX3Jlc29sdmUiLCJ3cml0ZTpvcGVyYXRpb25zX3JlcXVlc3QiLCJyZWFkOnVzZXIiLCJyZWFkOmRhdGEiLCJ3cml0ZTpkYXRhIiwidXBkYXRlOmRhdGEiLCJkZWxldGU6ZGF0YSIsIndyaXRlOnNjaGVtYSIsImRlbGV0ZTpzY2hlbWEiLCJyZWFkOnNjaGVtYSIsInJlYWQ6YXR0ZXN0YXRpb24iLCJ3cml0ZTphdHRlc3RhdGlvbiIsInJlYWQ6b3JhY2xlIiwid3JpdGU6b3JhY2xlIiwidXBkYXRlOm9yYWNsZSIsImRlbGV0ZTpvcmFjbGUiLCJ3cml0ZTpjaGFubmVsIiwicmVhZDpjaGFubmVsIiwicmVhZDp0ZW5hbnQiLCJ3cml0ZTp0ZW5hbnQiLCJkZWxldGU6dGVuYW50Iiwid3JpdGU6YXp0ZWNhY2NvdW50Iiwid3JpdGU6Y29uZmlkZW50aWFsdG9rZW4iLCJyZWFkOmNvbmZpZGVudGlhbHRva2VuIiwibWludDpjb25maWRlbnRpYWx0b2tlbiIsImhvbGQ6Y29uZmlkZW50aWFsdG9rZW4iLCJleGVjdXRlaG9sZDpjb25maWRlbnRpYWx0b2tlbiIsIndyaXRlOmFjY291bnQiLCJkZXBsb3k6dG9rZW4iLCJyZWFkOnRva2VuIiwibWludDp0b2tlbiIsImJ1cm46dG9rZW4iLCJob2xkOnRva2VuIiwiZXhlY3V0ZWhvbGQ6dG9rZW4iLCJ0cmFuc2Zlcjp0b2tlbiIsInNldF91cmk6dG9rZW4iLCJyZWFkOnRva2VuLW9wZXJhdGlvbiIsImNyZWF0ZTp0ZW5hbnQiLCJyZWFkX2FsbDp0ZW5hbnQiLCJ1cGRhdGU6dGVuYW50IiwidXBkYXRlX2FsbDp0ZW5hbnQiLCJkZWxldGVfYWxsOnRlbmFudCIsImNyZWF0ZTplbnRpdHkiLCJyZWFkOmVudGl0eSIsInJlYWRfYWxsOmVudGl0eSIsInVwZGF0ZV9hbGw6ZW50aXR5IiwidXBkYXRlOmVudGl0eSIsImRlbGV0ZV9hbGw6ZW50aXR5IiwiZGVsZXRlOmVudGl0eSIsImNyZWF0ZTpzdGFjazphZG1pbiIsImNyZWF0ZV9hbGw6dGVuYW50OmFkbWluIiwiY3JlYXRlOnRlbmFudDphZG1pbiIsImNyZWF0ZV9hbGw6ZW50aXR5OmFkbWluIiwiY3JlYXRlOmVudGl0eTphZG1pbiIsImNyZWF0ZTplbnRpdHk6bWVtYmVyIiwicmVhZF9hbGw6ZW50aXR5Om1lbWJlciIsInVwZGF0ZV9hbGw6ZW50aXR5Om1lbWJlciIsInVwZGF0ZTp1c2VyIiwiZGVsZXRlX2FsbDplbnRpdHk6bWVtYmVyIiwiZGVsZXRlOnVzZXIiLCJleGVjOnRva2VuIiwicmVhZDpldGhlcmV1bSIsIndyaXRlOmV0aGVyZXVtIiwiZGVsZXRlOmV0aGVyZXVtIiwiZGVzdHJveTpldGhlcmV1bSIsInNpZ246ZXRoZXJldW0iLCJlbmNyeXB0OmV0aGVyZXVtIiwicmVhZDprZXlzIiwid3JpdGU6a2V5cyIsImRlbGV0ZTprZXlzIiwiZGVzdHJveTprZXlzIiwic2lnbjprZXlzIiwiZW5jcnlwdDprZXlzIiwicHJveHk6bm9kZXMiLCJyZWFkOnNlY3JldHMiLCJ3cml0ZTpzZWNyZXRzIiwiZGVsZXRlOnNlY3JldHMiLCJkZXN0cm95OnNlY3JldHMiLCJyZWFkOmFsaWFzZXMiLCJ3cml0ZTphbGlhc2VzIiwiZGVsZXRlOmFsaWFzZXMiXX0.3-Q_5itgDtKW9SMnoAERHSAK82H_A30QIvhNXouWOMhbLwk457q9Za52REF8Gz_QHnRq3tBwwOUxldrBpc31XmWk2sV4n9ZI2Ksyg3R17bFlHMoeTat7MRBzzZSHMnL6TxrPOOo73VBWejR2cJ8O_5yZbw7chlx0SfKDegu3-J91DT5Y-hiMwCD1vCt80nZ9QjJS9gCImUZ6qyzYvaedd4SOtKhgtiiJIIVdUwPx5mHPZRP7cd2XwZO7WK-GTanb4ziexwdm6R_RYlFF8ZC0omnhuySCuzxAuIGxsEUIgfUOq_rDx5FIrDmRFBg_dggyyvdJWumAgXDF5SqdRu5jQA';

const defaultAuthMock = {
  scope: process.env.AUTH0_URL,
  method: 'POST',
  path: '/oauth/token',
  status: 200,
  response: {
    access_token: defaultAccessToken,
    scope:
      'write:operations_resolve write:operations_request read:user read:data write:data update:data delete:data write:schema delete:schema read:schema read:attestation write:attestation read:oracle write:oracle update:oracle delete:oracle write:channel read:channel read:tenant write:tenant delete:tenant write:aztecaccount write:confidentialtoken read:confidentialtoken mint:confidentialtoken hold:confidentialtoken executehold:confidentialtoken write:account deploy:token read:token mint:token burn:token hold:token executehold:token transfer:token set_uri:token read:token-operation create:tenant read_all:tenant update:tenant update_all:tenant delete_all:tenant create:entity read:entity read_all:entity update_all:entity update:entity delete_all:entity delete:entity create:stack:admin create_all:tenant:admin create:tenant:admin create_all:entity:admin create:entity:admin create:entity:member read_all:entity:member update_all:entity:member update:user delete_all:entity:member delete:user exec:token read:ethereum write:ethereum delete:ethereum destroy:ethereum sign:ethereum encrypt:ethereum read:keys write:keys delete:keys destroy:keys sign:keys encrypt:keys proxy:nodes read:secrets write:secrets delete:secrets destroy:secrets read:aliases write:aliases delete:aliases',
    expires_in: 86400,
    token_type: 'Bearer',
  },
  responseIsBinary: false,
};

export const defaultOptions = {
  // on 'lockdown' mode, 'after' is called after lockdown disables all net.
  after: () => nock.enableNetConnect('127.0.0.1'),
  // on 'record' I had to filter requests to localhost.
  afterRecord: (outputs) =>
    outputs
      .map((o) => {
        if (
          o.scope === process.env.AUTH0_URL &&
          o.path === '/oauth/token' &&
          o?.response?.access_token !== defaultAccessToken
        ) {
          return defaultAuthMock;
        }
        const { body, rawHeaders, ...cleanNock } = o;
        return cleanNock;
      })
      .filter((o) => !o.scope.match(/127.0.0.1/)),
};

if (process.env.RECORD && !realToken) {
  throw Error('Missing Real Auth Token for record nocks');
}

export const authToken = process.env.RECORD ? realToken : defaultAuthToken;
